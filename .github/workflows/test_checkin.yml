name: Test Cocotbext APB

on: 
  push: 
  pull_request:
  schedule:
    - cron: '0 1 * * 0'
jobs:
  run_lint:
    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
    runs-on: ubuntu-latest      
    
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
      - name: Run lint
        continue-on-error: true
        run: |
          pyflakes cocotbext
      - name: Run Type check
        continue-on-error: true
        run: |
          mypy cocotbext
 
  build_icarus_linux:
    uses: ./.github/workflows/setup_icarus.yml
#   build_verilator_linux:
#     uses: ./.github/workflows/setup_verilator.yml

  build_code_release:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        cocotb-version: ["release"]
#         target: [core, icarus, verilator, ghdl]
        target: [icarus]
#         target: [icarus, verilator]
    runs-on: ubuntu-latest
    needs: [run_lint, build_icarus_linux]

    env:
      CI_TARGET: ${{ matrix.target }}
      TERM: xterm-256color # for tput in the script file
    
    steps:
      - uses: actions/checkout@v4
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${CI_TARGET}"
      - name: Cache Icarus
        uses: actions/cache@v4
        with:
          path: ${{ needs.build_icarus_linux.outputs.cache_dir }}
          key: ${{ needs.build_icarus_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_icarus_linux.outputs.cache_dir }}/bin" >> ${GITHUB_PATH}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
      - if: ${{ matrix.cocotb-version == 'main' }}
        name: Install cocotb from repo
        run: |
          python -m pip uninstall -y cocotb cocotb-bus
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb.git
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb-bus.git
      - name: Run Tests
        run: |
          unset PYTHONHOME 
          make SIM=${CI_TARGET}

  build_code_main:

    strategy:
      fail-fast: false # So that one fail doesn't stop remaining tests
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        cocotb-version: ["main"]
#         target: [core, icarus, verilator, ghdl]
        target: [icarus]
#         target: [icarus, verilator]
    runs-on: ubuntu-latest
    needs: [run_lint, build_icarus_linux]

    env:
      CI_TARGET: ${{ matrix.target }}
      TERM: xterm-256color # for tput in the script file
    
    steps:
      - uses: actions/checkout@v4
      - name: Report Environment
        run: |
          echo "Runing tests with env set to : ${CI_TARGET}"
      - name: Cache Icarus
        uses: actions/cache@v4
        with:
          path: ${{ needs.build_icarus_linux.outputs.cache_dir }}
          key: ${{ needs.build_icarus_linux.outputs.cache_key }}
      - name: Add to PATH
        run: |
          echo "${{ needs.build_icarus_linux.outputs.cache_dir }}/bin" >> ${GITHUB_PATH}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade -r requirements.txt
          python -m pip install .
      - if: ${{ matrix.cocotb-version == 'main' }}
        name: Install cocotb from repo
        run: |
          python -m pip uninstall -y cocotb cocotb-bus
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb.git
          python -m pip install --upgrade git+https://github.com/cocotb/cocotb-bus.git
      - name: Run Tests
        run: |
          unset PYTHONHOME 
          make SIM=${CI_TARGET}
    
#   pypy_release:
#     needs: [build_code_linux]
#     uses: ./.github/workflows/pypy_release.yml
  pypy_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [build_code_release]
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Make PyPi dist release
        run: make dist
      - name: Publish Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          attestations: false

#         env: 
#           PYPY_SECRET : ${{ secrets.PYPI_API_TOKEN }}
#         if: " env.PYPY_SECRET != '' }}"
#           with:
#             password: ${{ secrets.PYPI_API_TOKEN }}
#             attestations: false
